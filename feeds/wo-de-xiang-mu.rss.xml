<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OK Computer</title><link>http://zoeyyoung.github.io/</link><description>It's better to burn out &lt;br/&gt; than to fade away.</description><atom:link href="http://zoeyyoung.github.io/feeds/wo-de-xiang-mu.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 24 Jul 2013 00:00:00 +0800</lastBuildDate><item><title>[项目] 书签云项目</title><link>http://zoeyyoung.github.io/bookmarks-cloud-tornado-project.html</link><description>&lt;p&gt;基于Tornado的项目，使用MongoDB&lt;/p&gt;
&lt;h3&gt;简介：&lt;/h3&gt;
&lt;p&gt;类似美味书签，通过定制，更适合有效管理个人书签&lt;/p&gt;
&lt;p&gt;保存平时浏览的链接，做简单的笔记或评论&lt;/p&gt;
&lt;p&gt;主要可用于学习记录，虽然有笔记软件，但有的并不想保存，只想简评一下时比较有用&lt;/p&gt;
&lt;p&gt;也类似美味书签，Pocket，但Pocket的不知咋的总用不惯，所以想写套自己用&lt;/p&gt;
&lt;p&gt;我个人不是很喜欢社交聚合类的应用，要分享什么的直接分享到微博上就好了&lt;/p&gt;
&lt;p&gt;更想以类似个人博客，个人知识收藏整理的方式展现，所以目标是尽可能使功能简单，易用&lt;/p&gt;
&lt;p&gt;使用Tornado框架开发&lt;/p&gt;
&lt;p&gt;基本上用上以后，我就很少在浏览器中保存书签了...&lt;/p&gt;
&lt;p&gt;浏览器中主要保存常用的链接，而用来保存一些零散的链接在查找的时候比较困难&lt;/p&gt;
&lt;p&gt;进行中....&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZoeyYoung/Bookmarks_Cloud"&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2013/08/07&lt;/p&gt;
&lt;p&gt;&lt;img alt="界面" src="/static/images/20130807001420.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;2013/07/27&lt;/p&gt;
&lt;p&gt;&lt;img alt="界面" src="/static/images/界面20130727.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="界面" src="/static/images/界面20130727Edit.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;书签面板与编辑面板之间的切换用翻转&lt;/p&gt;
&lt;p&gt;&lt;img alt="菜单" src="/static/images/菜单.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="菜单搜索" src="/static/images/菜单搜索.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;2013/07/24&lt;/p&gt;
&lt;p&gt;&lt;img alt="界面" src="/static/images/界面20130724.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;2013/07/20&lt;/p&gt;
&lt;p&gt;&lt;img alt="正文提取" src="/static/images/正文提取.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;2013/07/01&lt;/p&gt;
&lt;p&gt;首页，显示所有链接，有分页&lt;/p&gt;
&lt;p&gt;&lt;img alt="首页" src="/static/images/首页.png" /&gt;&lt;/p&gt;
&lt;p&gt;一般使用，当我看到某个网页想保存的时候，通过点击获取信息，可自动获取标题和摘要，设置标签，然后可添加笔记，使用Markdown语法&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加链接" src="/static/images/添加链接.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="添加后" src="/static/images/添加后.png" /&gt;&lt;/p&gt;
&lt;p&gt;通过标签云可快速查看某个类别的链接&lt;/p&gt;
&lt;p&gt;&lt;img alt="标签云" src="/static/images/标签云.png" /&gt;&lt;/p&gt;
&lt;p&gt;搜索，包括标签、标题和网址等&lt;/p&gt;
&lt;p&gt;&lt;img alt="搜索" src="/static/images/搜索.png" /&gt;&lt;/p&gt;
&lt;p&gt;2013/6/3&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0604/141143_2wb3_567775.png" /&gt;&lt;/p&gt;
&lt;p&gt;简化了模板，标签云以Tab的形式切换显示，不直接显示在主页&lt;/p&gt;
&lt;p&gt;因为使用了太多标签的话，只显示在左侧那么一点，感觉其实是不容易查找的&lt;/p&gt;
&lt;p&gt;而用Tab切换是不刷新页面的，不影响速度&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0604/141610_LITx_567775.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0604/141907_vi5c_567775.png" /&gt;&lt;/p&gt;
&lt;p&gt;2013/5/26&lt;/p&gt;
&lt;p&gt;完成搜索，在标题，标签，url，笔记中搜索&lt;/p&gt;
&lt;p&gt;2013/5/23&lt;/p&gt;
&lt;p&gt;加入数据库，可编辑，删除&lt;/p&gt;
&lt;p&gt;使用Markdown做笔记&lt;/p&gt;
&lt;p&gt;添加简单的用户验证，单用户，用户名密码写在配置文件中&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0523/004215_f1uB_567775.png" /&gt;&lt;/p&gt;
&lt;p&gt;标签修正&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0523/012809_bXI2_567775.png" /&gt;&lt;/p&gt;
&lt;p&gt;2013/5/23&lt;/p&gt;
&lt;p&gt;将Chrome的书签导入，将文件夹目录作为标签导入&lt;/p&gt;
&lt;p&gt;生成标签云&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0523/224703_MMp9_567775.png" /&gt;&lt;/p&gt;
&lt;p&gt;随机获取链接&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0524/142839_Mbzb_567775.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;个人使用中, 顺便整理收藏夹中的链接, 感觉好多都沉了几年了- -&lt;/p&gt;
&lt;p&gt;添加了分页, 使用不推荐的skip()方法, 而且代码写得比较丑陋, 还需要修改&lt;/p&gt;
&lt;p&gt;2013/5/22&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0522/022628_htUT_567775.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="在此输入图片描述" src="http://static.oschina.net/uploads/space/2013/0522/022643_KfAp_567775.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zoey Young</dc:creator><pubDate>Wed, 24 Jul 2013 00:00:00 +0800</pubDate><guid>tag:zoeyyoung.github.io,2013-07-24:bookmarks-cloud-tornado-project.html</guid><category>Tornado</category><category>MongoDB</category><category>Python</category><category>项目</category><category>标签</category><category>书签</category><category>链接</category></item><item><title>[项目] 书签云项目的Chrome浏览器插件</title><link>http://zoeyyoung.github.io/chrome-ext-dev.html</link><description>&lt;p&gt;&lt;img alt="1" src="/static/images/ChromeExt/截图.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="2" src="/static/images/ChromeExt/截图2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;创建&lt;strong&gt;manifest.json&lt;/strong&gt;文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;manifest_version&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;

  &lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;LinksBox&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;我的书签管理应用Chrome浏览器插件.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;icons&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;16&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;icon.png&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;48&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;icon.png&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;128&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;icon.png&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;browser_action&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;default_icon&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;icon.png&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;default_popup&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;popup.html&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;permissions&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;tabs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:8888/&amp;quot;&lt;/span&gt;
  &lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意设置&lt;code&gt;permissions&lt;/code&gt;才能进行Ajax请求等跨域操作&lt;/p&gt;
&lt;p&gt;&lt;code&gt;permissions&lt;/code&gt;中添加&lt;code&gt;tabs&lt;/code&gt;使允许获得网页&lt;code&gt;url&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;favIconUrl&lt;/code&gt;三个属性&lt;/p&gt;
&lt;p&gt;&lt;code&gt;popup.html&lt;/code&gt;中放置要弹出的界面, 与写普通的HTML一样&lt;/p&gt;
&lt;p&gt;我偷懒直接用了原来的表单, 但是CSS进行了简化&lt;/p&gt;
&lt;p&gt;&lt;code&gt;popup.js&lt;/code&gt;中放置要执行的脚本, 获取当前标签页的参数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tabs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSelected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;initForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;chrome&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tabs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onUpdated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tabId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;changeInfo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;initForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;初始化表单:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;initForm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;favicon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;favIconUrl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#favicon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;favicon&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/link/get_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;initAddLinkForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;数据库返回错误&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;项目地址: https://github.com/ZoeyYoung/www-Links-Chrome-Extension&lt;/p&gt;
&lt;p&gt;2013/07/24&lt;/p&gt;
&lt;p&gt;更新可直接通过选中文本作为笔记&lt;/p&gt;
&lt;p&gt;并直接获取网页的HTML字符串, 不在后台重新抓取&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zoey Young</dc:creator><pubDate>Mon, 17 Jun 2013 00:00:00 +0800</pubDate><guid>tag:zoeyyoung.github.io,2013-06-17:chrome-ext-dev.html</guid><category>Chrome</category><category>Chrome插件</category><category>开发</category></item><item><title>[项目] 基于XMPP的Web IM</title><link>http://zoeyyoung.github.io/xmpp-im-project.html</link><description>&lt;p&gt;平台：Windows 7&lt;/p&gt;
&lt;h3&gt;安装准备&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;下载&lt;a href="http://www.igniterealtime.org/downloads/index.jsp"&gt;Openfire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载&lt;a href="http://strophe.im/strophejs/"&gt;Strophe.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载&lt;a href="http://nginx.org/en/download.html"&gt;Nginx&lt;/a&gt;或者&lt;a href="http://httpd.apache.org/"&gt;Apache&lt;/a&gt;并安装配置：只需一个，作为80端口服务的代理转发服务器(本文没有测试Apache)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;安装Openfire(当前版本3.8.2)&lt;/h3&gt;
&lt;p&gt;普通安装包, 像正常安装软件一样安装就行了&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="/static/images/XMPP/openfire_1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;首次需配置, 后面仍可在管理控制台进行更改&lt;/p&gt;
&lt;p&gt;goingmerry为我的主机名, 相当于localhost&lt;/p&gt;
&lt;p&gt;&lt;img alt="2" src="/static/images/XMPP/openfire_2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="3" src="/static/images/XMPP/openfire_3.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="4" src="/static/images/XMPP/openfire_4.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="5" src="/static/images/XMPP/openfire_5.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;需要打开OpenFire的&lt;strong&gt;http-binding&lt;/strong&gt;. 具体为登录后台管理界面。&lt;/p&gt;
&lt;p&gt;服务器 -&amp;gt; 服务器设置 -&amp;gt; Http绑定(英文界面：Server -&amp;gt; Server Settings -&amp;gt; Http Binding)&lt;/p&gt;
&lt;p&gt;&lt;img alt="6" src="/static/images/XMPP/openfire_6.jpg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启用 - 客户端能使用HTTP绑定连接到这台服务器&lt;/li&gt;
&lt;li&gt;Script Syntax - Enabled - Allows BOSH Clients With Limited Access to Connect to the Server&lt;/li&gt;
&lt;li&gt;端口按默认的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;安装Spark(当前版本2.6.3), 用于测试&lt;/h3&gt;
&lt;p&gt;&lt;img alt="7" src="/static/images/XMPP/openfire_7.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;下面两图设置是对应的&lt;/p&gt;
&lt;p&gt;&lt;img alt="8" src="/static/images/XMPP/openfire_8.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="9" src="/static/images/XMPP/openfire_9.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;可在Spark中建立新帐号&lt;/p&gt;
&lt;p&gt;&lt;img alt="10" src="/static/images/XMPP/openfire_10.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;Nginx的配置&lt;/h3&gt;
&lt;p&gt;下载Nginx(当前版本1.5.1): http://nginx.org/en/download.html&lt;/p&gt;
&lt;p&gt;打开nginx的配置文件&lt;strong&gt;conf/nginx.conf&lt;/strong&gt;，增加如下行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;# 添加的-----Begin-----&lt;/span&gt;
&lt;span class="cp"&gt;# location /http-bind { 原来用这个成功的, 这回用的下面这个成功的..&lt;/span&gt;
&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;^/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//127.0.0.1:7070;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_buffering&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_redirect&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_read_timeout&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;proxy_connect_timeout&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;tcp_nodelay&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;# 添加的-----End-----&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动nginx: 打开命令行，进行nginx目录，输入&lt;code&gt;start nginx&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Strophe的示例程序运行&lt;/h3&gt;
&lt;p&gt;将下载的&lt;strong&gt;strophejs文件&lt;/strong&gt;解压至Ngnix的html文件夹中，在strophejs/examples文件夹中有一些示例文件，修改"*.js"文件中的&lt;code&gt;BOSH_SERVICE&lt;/code&gt;为&lt;code&gt;'/http-bind/'&lt;/code&gt;即可。(这里有个问题，示例程序中使用的jQuery有点过时，加载较慢，手动下载jQuery进行替换，能加快载入速度)&lt;/p&gt;
&lt;p&gt;这里以echobot.js为例：&lt;/p&gt;
&lt;p&gt;编辑echobot.js，修改第一行为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;BOSH_SERVICE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在浏览器中打开：http://localhost/strophejs/examples/echobot.html&lt;/p&gt;
&lt;p&gt;使用Openfire中的用户进行登录, 点击连接成功后, 如图.&lt;/p&gt;
&lt;p&gt;&lt;img alt="11" src="/static/images/XMPP/openfire_11.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;Apache的配置&lt;/h3&gt;
&lt;p&gt;在&lt;strong&gt;httpd.conf&lt;/strong&gt;中加入下面几行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;LoadModule&lt;/span&gt; &lt;span class="n"&gt;proxy_module&lt;/span&gt; &lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mod_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;
&lt;span class="n"&gt;LoadModule&lt;/span&gt; &lt;span class="n"&gt;proxy_http_module&lt;/span&gt; &lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mod_proxy_http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;

&lt;span class="n"&gt;ProxyRequests&lt;/span&gt; &lt;span class="n"&gt;Off&lt;/span&gt;
&lt;span class="n"&gt;ProxyPass&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//127.0.0.1:7070/http-bind/&lt;/span&gt;
&lt;span class="n"&gt;ProxyPassReverse&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//127.0.0.1:7070/http-bind/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注：需要apache有编译proxy模块&lt;/p&gt;
&lt;h3&gt;测试我的项目&lt;/h3&gt;
&lt;p&gt;我的项目实现了许多常用功能, 包括群聊, 状态设置, 个人名片等..&lt;/p&gt;
&lt;p&gt;代码未整理, 整理后再传到GitHub上&lt;/p&gt;
&lt;p&gt;与Spark进行通信, 如图&lt;/p&gt;
&lt;p&gt;&lt;img alt="12" src="/static/images/XMPP/openfire_12.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;参考文档&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/makoto/272956"&gt;A short tutorial on Echobot by Alfred Westerveld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://anders.conbere.org/blog/2011/05/03/get_xmpp_-_bosh_working_with_ejabberd_firefox_and_strophe/"&gt;Anders Conbere’s guide to BOSH, ejabberd, Firefox, and Strophe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/hannover/archive/2010/11/14/1876819.html"&gt;WEBIM的简单实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zoey Young</dc:creator><pubDate>Sat, 15 Jun 2013 00:00:00 +0800</pubDate><guid>tag:zoeyyoung.github.io,2013-06-15:xmpp-im-project.html</guid><category>XMPP</category><category>Openfire</category><category>jQuery</category><category>jQuery UI</category><category>strophejs</category><category>Web</category><category>Nginx</category></item><item><title>[项目] LinksBox</title><link>http://zoeyyoung.github.io/linksbox-flask-project.html</link><description>&lt;p&gt;基于Flask, 数据库使用sqlite&lt;/p&gt;
&lt;p&gt;多用户, 类似微博, 可关注(取消关注)别人的收藏夹&lt;/p&gt;
&lt;p&gt;首页，显示所有链接&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="/static/images/Flask.png" /&gt;&lt;/p&gt;
&lt;p&gt;添加链接&lt;/p&gt;
&lt;p&gt;&lt;img alt="2" src="/static/images/Flask2.png" /&gt;&lt;/p&gt;
&lt;p&gt;注: 一开始想实现的功能比较复杂, 后面想保持简单, 因此用Tornado实现了另一个个人使用的版本, 个人使用中...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zoey Young</dc:creator><pubDate>Thu, 13 Jun 2013 00:00:00 +0800</pubDate><guid>tag:zoeyyoung.github.io,2013-06-13:linksbox-flask-project.html</guid><category>Flask</category><category>Python</category><category>Web</category></item><item><title>[项目] Web IM</title><link>http://zoeyyoung.github.io/web-im-project.html</link><description>&lt;p&gt;在永中实习期间的项目, 独立维护, 对公司原有的代码进行了大量的修改, 解决了大量Bug, 并对原有代码进行了重构、优化&lt;/p&gt;
&lt;p&gt;项目主要使用到了ExtJS, jQuery, 使用DWR进行数据推送与Ajax数据获取&lt;/p&gt;
&lt;p&gt;在这里只给出截图&lt;/p&gt;
&lt;p&gt;联系人界面, 可收进, 展开, 模仿新浪微博&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="/static/images/IM/1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;主聊天界面, 主要使用了ExtJS组件实现&lt;/p&gt;
&lt;p&gt;&lt;img alt="2" src="/static/images/IM/2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;在有新消息时, 会有声音提醒, 闪动提醒, 高亮提醒&lt;/p&gt;
&lt;p&gt;&lt;img alt="3" src="/static/images/IM/3.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;悬浮可出现消息列表&lt;/p&gt;
&lt;p&gt;&lt;img alt="4" src="/static/images/IM/4.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;联系人资料&lt;/p&gt;
&lt;p&gt;&lt;img alt="5" src="/static/images/IM/5.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;创建讨论组&lt;/p&gt;
&lt;p&gt;&lt;img alt="6" src="/static/images/IM/6.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;查找联系人&lt;/p&gt;
&lt;p&gt;&lt;img alt="7" src="/static/images/IM/7.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;添加联系人&lt;/p&gt;
&lt;p&gt;&lt;img alt="8" src="/static/images/IM/8.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;查找讨论组&lt;/p&gt;
&lt;p&gt;&lt;img alt="9" src="/static/images/IM/9.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;加入讨论组&lt;/p&gt;
&lt;p&gt;&lt;img alt="10" src="/static/images/IM/10.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;添加好友提醒&lt;/p&gt;
&lt;p&gt;&lt;img alt="11" src="/static/images/IM/11.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="14" src="/static/images/IM/14.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="15" src="/static/images/IM/15.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;历史记录&lt;/p&gt;
&lt;p&gt;&lt;img alt="12" src="/static/images/IM/12.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;右键菜单&lt;/p&gt;
&lt;p&gt;&lt;img alt="13" src="/static/images/IM/13.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zoey Young</dc:creator><pubDate>Thu, 13 Jun 2013 00:00:00 +0800</pubDate><guid>tag:zoeyyoung.github.io,2013-06-13:web-im-project.html</guid><category>ExtJS</category><category>jQuery</category><category>DWR</category><category>Java EE</category><category>Spring</category></item><item><title>[项目] 数据挖掘——Wine Data Set</title><link>http://zoeyyoung.github.io/data-mining-wine-data-set-project.html</link><description>&lt;h1&gt;数据源&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://archive.ics.uci.edu/ml/datasets/Wine"&gt;来源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;数据源的完整名称是&lt;strong&gt;Wine Data Set&lt;/strong&gt;，是对3种不同的酒进行分类。这三种酒包括13种不同的属性，分别为：Alcohol, Malic acid, Ash, Alcalinity of ash, Magnesium, Total phenols, Flavanoids, Nonflavanoid phenols, Proanthocyanins, Color intensity, Hue, OD280/OD315 of diluted wines, Proline. 在“wine.data”文件中, 每行代表一种酒的样本, 共有178个样本; 一共有14列, 其中, 第一列为类标志属性, 共有三类, 分别记为“1”, “2”, “3”; 后面的13列为每个样本的对应属性的样本值. 其中第1类有59个样本，第2类有71个样本，第3类有48个样本。&lt;/p&gt;
&lt;h1&gt;算法介绍&lt;/h1&gt;
&lt;p&gt;本实验采用了两种算法对数据源进行分类，分别为朴素贝叶斯算法和K最近邻算法.&lt;/p&gt;
&lt;h1&gt;朴素贝叶斯分类算法简介&lt;/h1&gt;
&lt;p&gt;统计学的方法, 可以预测类成员关系的可能性, 即给定样本属于一个特定类的概率.&lt;/p&gt;
&lt;p&gt;1、贝叶斯定理&lt;/p&gt;
&lt;p&gt;后验概率(posteriori probabilities): P(H|X)表示条件X下H的概率.&lt;/p&gt;
&lt;p&gt;贝叶斯定理:P(H|X)=P(X|H)P(H)/P(X)&lt;/p&gt;
&lt;p&gt;2、朴素贝叶斯分类&lt;/p&gt;
&lt;p&gt;每个数据样本用一个n维特征向量X={x1,x2,…,xn}表示，分别描述对n个属性A1,A2,..,An样本的n个度量.&lt;/p&gt;
&lt;p&gt;假定有m个类C1,…,Cm,对于数据样本X,分类法将预测X属于类Ci,当且仅当&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ci&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cj&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="err"&gt;不等于&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据贝叶斯定理, P(Ci|X)=P(X|Ci)P(Ci)/P(X)&lt;/p&gt;
&lt;p&gt;由于P(X)对于所有类都是常数, 只需最大化P(X|Ci)P(Ci)&lt;/p&gt;
&lt;p&gt;计算P(X|Ci), 朴素贝叶斯分类假设类条件独立. 即给定样本属性值相互条件独立. （在一般情况下此假定都能成立）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ci&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ci&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X2&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ci&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Xn&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Ci&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;贝叶斯数据预处理&lt;/h2&gt;
&lt;p&gt;根据对所有属性数据的观察，采取了相对简单的预处理方法。代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;discretization&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;[]&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;[]&amp;gt;();&lt;/span&gt;
    &lt;span class="n"&gt;minmax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getMinMax&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;dimension&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// 如果最小值大于100且最大值大于1000，则所有值除以100&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// 如果最小值大于10且最大值大于100，则所有值除以10&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// 对所有值取整&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;dimension&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arith&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;convertsToInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;结果展示&lt;/h2&gt;
&lt;p&gt;&lt;img alt="朴素贝叶斯" src="/static/images/朴素贝叶斯.gif" /&gt;&lt;/p&gt;
&lt;h1&gt;KNN算法简介&lt;/h1&gt;
&lt;p&gt;基于类比学习，通过比较训练元组和测试元组的相似度来学习。&lt;/p&gt;
&lt;p&gt;将训练元组和测试元组看作是n维（若元组有n的属性）空间内的点，给定一条测试元组，搜索n维空间，找出与测试元组最相近的k个点（即训练元组），最后取这k个点中的多数类作为测试元组的类别。&lt;/p&gt;
&lt;h2&gt;KNN数据预处理&lt;/h2&gt;
&lt;p&gt;采用最小-最大规范化，将数据区间规范为[0,1]，对任意一个在原来区间中的变量，在新的区间中都有一个值和它对应，这是一个线性变换过程。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;old_min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;old_max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;old_min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;minMaxDataFormat&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;[]&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;[]&amp;gt;();&lt;/span&gt;
    &lt;span class="n"&gt;minmax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getMinMax&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;dimension&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
                &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;minmax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]));&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;结果展示&lt;/h2&gt;
&lt;p&gt;&lt;img alt="KNN" src="/static/images/KNN.gif" /&gt;&lt;/p&gt;
&lt;h1&gt;项目结构&lt;/h1&gt;
&lt;p&gt;&lt;img alt="项目结构" src="/static/images/数据挖掘.png" /&gt;&lt;/p&gt;
&lt;p&gt;算法的实现在KNN.java与NaiveBayes.java中。&lt;/p&gt;
&lt;p&gt;Data.java用来获取数据并含有对数据进行预处理的算法。&lt;/p&gt;
&lt;p&gt;ModelAssessment用来保存模型评估相关数据，暂时只保存正确率、错误率与算法执行时间。其它包中文件为数据库与Servlet相关。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZoeyYoung/wine-data-set"&gt;源代码&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zoey Young</dc:creator><pubDate>Fri, 18 Nov 2011 00:00:00 +0800</pubDate><guid>tag:zoeyyoung.github.io,2011-11-18:data-mining-wine-data-set-project.html</guid><category>Servlet</category><category>数据挖掘</category></item><item><title>[项目] 中外合作办学管理平台的设计和实现</title><link>http://zoeyyoung.github.io/cfce-project.html</link><description>&lt;h2&gt;研究背景&lt;/h2&gt;
&lt;p&gt;中外合作办学是指中国教育机构与外国教育机构依法在中国境内合作举办以中国公民为主要招生对象的教育教学活动。&lt;/p&gt;
&lt;p&gt;本系统以我校卡耐基梅隆合作办学为背景，采用Java EE进行开发，设计B/S结构的信息管理系统，能够做到统一的项目宣传和信息服务功能。&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="/static/images/CFCE/网站设计1.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="2" src="/static/images/CFCE/网站设计2.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="3" src="/static/images/CFCE/中外合作办学项目.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="4" src="/static/images/CFCE/中外合作办学项目文章.jpg" /&gt;&lt;/p&gt;
&lt;h1&gt;系统开发技术&lt;/h1&gt;
&lt;p&gt;&lt;img alt="5" src="/static/images/CFCE/技术.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;在前台开发中，使用了FreeMarker作为表现层的实现技术。&lt;/p&gt;
&lt;p&gt;FreeMarker是一个用Java语言编写的模板引擎，它基于模板来生成文本输出。
使用FreeMarker可以彻底的分离表现层和业务逻辑。&lt;/p&gt;
&lt;p&gt;&lt;img alt="6" src="/static/images/CFCE/Freemarker.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="7" src="/static/images/CFCE/框架.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;系统功能介绍&lt;/h2&gt;
&lt;p&gt;&lt;img alt="8" src="/static/images/CFCE/功能.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="9" src="/static/images/CFCE/申请项目流程.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;页面展示&lt;/h2&gt;
&lt;p&gt;&lt;img alt="10" src="/static/images/CFCE/后台管理.gif" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="11" src="/static/images/CFCE/主页中文.gif" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="12" src="/static/images/CFCE/主页英文.gif" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Zoey Young</dc:creator><pubDate>Wed, 01 Jun 2011 00:00:00 +0800</pubDate><guid>tag:zoeyyoung.github.io,2011-06-01:cfce-project.html</guid><category>Java EE</category><category>Hibernate</category><category>Struts2</category></item></channel></rss>